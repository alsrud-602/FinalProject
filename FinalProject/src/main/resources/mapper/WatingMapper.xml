<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.board.business.mapper.WatingMapper">  

	<insert id="insertWatingList">
    INSERT INTO WAITINGS (WAITING_IDX,STORE_IDX,WATING_ORDER,USER_IDX,RESERVATION_NUMBER,CDATE
    ) VALUES (
    (SELECT NVL(MAX(waiting_idx),0) FROM WAITINGS) +1 ,
     #{store_idx},
     (SELECT NVL(MAX(wating_order),0) FROM WAITINGS) +1,
     #{user_idx},
     #{reservation_number},
     TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS') 
)
	</insert>
    
    <select id="getWatingList">
    SELECT U.USER_IDX, U.ID,U.SOCIAL_ID,U.NAME,W.WAITING_IDX, W.STORE_IDX, W.WATING_ORDER, W.STATUS, W.RESERVATION_NUMBER, W.EDATE
    FROM WAITINGS W JOIN USERS U ON W.USER_IDX = U.USER_IDX
    WHERE STORE_IDX = #{store_idx} AND( W.STATUS IN('대기','현재순번'))
    ORDER BY  W.WATING_ORDER
    </select>
    
    
    <update id="updateWatingList">
    UPDATE WAITINGS
    SET  STATUS = #{status}, EDATE = TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS')
    WHERE  WAITING_IDX =#{waiting_idx}    
    </update>
    
    
        <!-- 순번 업데이트 -->
    <update id="updateWaitingOrder">
    UPDATE WAITINGS
    SET WATING_ORDER = #{arg2}
    WHERE STORE_IDX = #{arg0}
    AND WATING_ORDER = #{arg1}
    </update>
	
	<select id="getStore_idxWaiting">
	SELECT STORE_IDX
	FROM WAITINGS
	WHERE  WAITING_IDX = #{waiting_idx}  
	
	</select>
	
	<update id="updateOnsiteUse">
	UPDATE RESERVATION_STORES
	SET ONSITE_USE = #{onsite_use}
	WHERE  STORE_IDX = #{store_idx}		
	</update>
	
	<select id="getStoreStauts">
	SELECT ONSITE_USE
	FROM RESERVATION_STORES
	WHERE STORE_IDX = #{store_idx}	
	
	</select>
	
	<select id="getUser_idxWating">
	SELECT  WAITING_IDX,
			STORE_IDX,
			WATING_ORDER,
			USER_IDX,
			STATUS,
			RESERVATION_NUMBER,
			EDATE
	FROM WAITINGS
	WHERE  WAITING_IDX = #{waiting_idx}  
	
	</select>
	
  <select id="getUserWaiting">
	SELECT  W.WAITING_IDX,
			W.STORE_IDX,
			W.WATING_ORDER,
			W.USER_IDX,
			W.STATUS,
			W.RESERVATION_NUMBER,
			W.EDATE,
            S.TITLE,
            W.CDATE
	FROM WAITINGS W JOIN  STORES S ON W.STORE_IDX =S.STORE_IDX
	WHERE  W.USER_IDX = #{user_idx} AND (W.STATUS='대기' OR W.STATUS='현재순번')
	</select>
	
	<select id="getUserWaitingList">
	SELECT  W.WAITING_IDX,
			W.STORE_IDX,
			W.WATING_ORDER,
			W.USER_IDX,
			W.STATUS,
			W.RESERVATION_NUMBER,
			W.EDATE,
            S.TITLE,
            W.CDATE
	FROM WAITINGS W JOIN  STORES S ON W.STORE_IDX =S.STORE_IDX
	WHERE  W.USER_IDX = #{user_idx}
	
	</select>
	
	
	<select id="getadvanceList">
SELECT
    RU.RESERVATION_IDX,
    RU.USER_IDX,
    RU.STATUS,
    RU.RESERVATION_NUMBER,
    TO_CHAR(RU.CDATE, 'YYYY-MM-DD') AS CDATE,
    RU.RP_IDX,
    '20'||TO_CHAR( TO_DATE(RU.reservation_date, 'YYYY-MM-DD'),'YY-MM-DD') AS RESERVATION_DATE,
    RU.STORE_IDX,
    S.TITLE,
    TO_CHAR(RP.start_time, 'HH24:MI') || ' - ' || TO_CHAR(RP.end_time, 'HH24:MI') AS TIME_SLOT
FROM
    RESERVATION_USERS RU JOIN STORES S ON RU.STORE_IDX = S.STORE_IDX
                         JOIN RESERVATION_PLANS RP ON RP.RP_IDX =RU.RP_IDX
WHERE USER_IDX =#{user_idx}
</select>


<select id="getonStieList">
SELECT W.WAITING_IDX, W.STORE_IDX, W.WATING_ORDER, W.USER_IDX, W.STATUS, W.RESERVATION_NUMBER, W.EDATE, W.CDATE, S.TITLE
FROM  WAITINGS W JOIN STORES S ON W.STORE_IDX = S.STORE_IDX
WHERE W.USER_IDX =#{user_idx} AND ( W.STATUS ='예약취소' OR W.STATUS ='노쇼'  OR W.STATUS ='현장방문' )
</select>



<select id="getcheckWaiting">
SELECT WAITING_IDX
FROM WAITINGS
WHERE USER_IDX =#{user_idx} AND (STATUS ='대기' OR STATUS ='현재순번')
</select>

<select id="getStoreAddressNote">
SELECT RS.NOTES, SD.ADDRESS
FROM RESERVATION_STORES RS JOIN STORES_DETAIL SD ON RS.STORE_IDX = SD.STORE_IDX
WHERE RS.STORE_IDX =#{store_idx}
</select>


<select id="getWatingTime">
SELECT EDATE, CDATE
FROM WAITINGS
WHERE STORE_IDX = #{store_idx} AND STATUS = '현장방문' AND TRUNC(TO_DATE(CDATE, 'YYYY-MM-DD HH24:MI:SS')) = TRUNC(SYSDATE)
</select>

</mapper>

















